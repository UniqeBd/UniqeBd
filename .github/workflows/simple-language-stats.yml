name: Simple Language Statistics Update

on:
  workflow_dispatch: # Manual trigger only
    inputs:
      include_private:
        description: 'Include private repositories (requires PERSONAL_ACCESS_TOKEN secret)'
        required: false
        default: 'false'
        type: boolean
  schedule:
    # Run weekly instead of daily to reduce API usage
    - cron: '0 6 * * 0'  # Every Sunday at 6 AM UTC

permissions:
  contents: write
  actions: read
  metadata: read

jobs:
  update-stats:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Use personal token if available and requested, otherwise use built-in token
        token: ${{ (github.event.inputs.include_private == 'true' && secrets.PERSONAL_ACCESS_TOKEN) || github.token }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check configuration
      run: |
        echo "üîç Configuration:"
        echo "Include private repos: ${{ github.event.inputs.include_private || 'false' }}"
        echo "Personal token available: ${{ secrets.PERSONAL_ACCESS_TOKEN != '' }}"
        echo "Repository: ${{ github.repository }}"
        echo "Username: ${{ github.repository_owner }}"
        
        if [[ "${{ github.event.inputs.include_private }}" == "true" ]]; then
          if [[ "${{ secrets.PERSONAL_ACCESS_TOKEN }}" == "" ]]; then
            echo "‚ö†Ô∏è  WARNING: Private repos requested but no PERSONAL_ACCESS_TOKEN found!"
            echo "   Add a Personal Access Token to repository secrets to access private repos."
            echo "   Falling back to public repositories only."
          else
            echo "‚úÖ Personal token found - will include private repositories"
          fi
        else
          echo "‚ÑπÔ∏è  Using public repositories only (default)"
        fi
    
    - name: Test GitHub API access
      run: |
        echo "üîê Testing GitHub API access..."
        if curl -s -H "Authorization: token ${{ github.token }}" \
           -H "Accept: application/vnd.github.v3+json" \
           "https://api.github.com/repos/${{ github.repository }}" > /dev/null; then
          echo "‚úÖ GitHub API access confirmed"
        else
          echo "‚ùå GitHub API access failed"
          exit 1
        fi
    
    - name: Update language statistics
      run: |
        echo "üöÄ Starting language statistics update..."
        echo "Repository: ${{ github.repository }}"
        echo "Username: ${{ github.repository_owner }}"
        
        python scripts/update_language_stats.py
      env:
        # Use personal token if available and private repos requested
        GITHUB_TOKEN: ${{ (github.event.inputs.include_private == 'true' && secrets.PERSONAL_ACCESS_TOKEN) || github.token }}
        GITHUB_USERNAME: ${{ github.repository_owner }}
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes
        git add README.md
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          echo "üìù Changes detected, committing..."
          git commit -m "ü§ñ Auto-update language statistics

- Updated language percentages
- Refreshed repository statistics
- Updated technology badges

Automated update by GitHub Actions"
          
          git push origin main
          echo "‚úÖ Changes pushed to main branch"
        fi
